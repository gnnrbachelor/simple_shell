#include "shell.h"
/**
 * main - main function of shell program
 * @argc: argument count
 * @argv: argument array
 * @env: environmental variable
 * Return: 0
 */
int main(int argc, char **argv, char **env)
{
	char *buffer;
	char **command_array;
	size_t size;
	ssize_t line_size;
	(void)argv;
	(void)argc;
	(void)env;

	buffer = NULL;

<<<<<<< HEAD
	if (isatty(STDIN_FILENO))
			write(STDOUT_FILENO, "$ ", 2);

	while ((line_size = getline(&buffer, &size, stdin)))
=======
	write(STDOUT_FILENO, "$ ", 2);
	while ((line_size = getline(&buffer, &size, stdin)) < 1024)
>>>>>>> main
	{

		command_array = tokenize(buffer);
<<<<<<< HEAD
		execute(command_array, buffer);

		size = 0;
		buffer = NULL;

		if (isatty(STDIN_FILENO))
			write(STDOUT_FILENO, "$ ", 2);
=======
		pid = fork();
		if (pid == -1)
			perror("Error\n");

		if (pid == 0)
		{
			if (stat(command_array[0], &fstat) == 0)
			{
				execve(command_array[0], command_array, NULL);
/* need to find the way to add "$ " behind stat */
			}
			else
			{
				perror("Problem\n");
				write(STDOUT_FILENO, "$ ", 2);
			}
		}
>>>>>>> main
	}
	free_token(command_array);
        exit(0);
}
